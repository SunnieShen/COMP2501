knitr::opts_chunk$set(echo = TRUE)
# Load the required packages
# install.packages(c("dslabs", "dplyr", "ggplot2", "lubridate"))
library(dslabs)
library(dplyr)
library(ggplot2)
library(lubridate)
data("murders")
head(murders, 2)
mat matrix(1:12, 4, 3)
mat <- matrix(1:12, 4, 3)
mat
mat <- matrix(1:50, 10, 5)
mat[5:8, 2 5]
mat <- matrix(1:50, 10, 5)
mat[5:8, 2&5]
mat <- matrix(1:50, 10, 5)
mat
mat[5:8, 2&5]
mat <- matrix(1:50, 10, 5)
mat
mat[5:8, c(2, 5)]
mat <- matrix(1:50, 10, 5)
mat[5:8, c(2, 5)]
?is.factor
between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100))
library(dplyr)
between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100))
?between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100))
table(between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100)))
table(between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100)))
set.seed(123)
table(between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100)))
set.seed(123)
table(between(rnorm(100), seq(-2,-1,length.out=100), rep(1, times=100)))
library(tidyverse)
data(murders)
library(dslabs)
data(murders)
ggplot(data = murders)+
geom_point(aes(population/1-^6, total), size=3)+
ggplot(data = murders)+
geom_point(aes(population/10^6, total), size=3)+
geom_text(aes(population/10^6, total, label = abb))
ggplot(data = murders)+ geom_point(aes(population/10^6, total), size=3)+
+ geom_text(aes(population/10^6, total, label = abb))
ggplot(data = murders)+
+ geom_point(aes(population/10^6, total), size=3)+
+ geom_text(aes(population/10^6, total, label = abb))
p <- ggplot(data = murders)+geom_point(aes(population/10^6, total), size=3)+geom_text(aes(population/10^6, total, label = abb))
p <- p+geom_text(aes(population/10^6, total, label = abb), nudge_x = 1.5)
p
View(p)
View(p)
p - geom_text(aes(population/10^6, total, label = abb), nudge_x = 1.5) - geom_text(aes(population/10^6, total, label = abb))
p1 <- ggplot(data = murders)+geom_point(aes(population/10^6, total), size=3)+geom_text(aes(population/10^6, total, label = abb), nudge_x=1, nudge_y=1)
Vie
View(p1)
View(p1)
View(p1)
View(p1)
p <- ggplot(data = murders)+geom_point(aes(population/10^6, total), size=3)+geom_text(aes(population/10^6, total, label = abb), nudge_x = 2)
View(p)
p <- p+geom(nudge_y=2)
p <- P+geom_point(nudge_y=2)
p <- p+geom_point(nudge_y=2)
p <- p+geom_text(nudge_y=2)
p <- ggplot(aes(population/10^6, total))+
geom_point()+
geom_text(label=abb, nudge_x = 2)
murders |> ggplot(aes(population/10^6, total)) +
geom_point(aes(color = region), size = 3)
murders |> ggplot(aes(population/10^6, total)) + geom_point()
p <- murders |> ggplot(aes(population/10^6, total)) + geom_point()
p1 <- p+
geom_point(aes(color = region), size = 3)
View(p1)
View(p1)
View(p1)
View(p1)
View(p1)
View(p1)
View(p1)
p2 <- p1 +
scale_x_continuous(trans = "log10")+
scale_y_continuous(trans = "log10")
p2
p1
p2
p3 <- p2+
labs(x="population in millions(log scale)", y = "total number of murders(log scale)", title = "US gun murders in 2010")
p3
p3 <- p3+geom_text(label=abb, nudge_x=3)
p3 <- p3+geom_label(aes(label=abb), nudge_x=3)
p3
p3 <- p2+geom_text(aes(label=abb), nudge = 1.5)
p3 <- p2+geom_text(aes(label=abb), nudge_x = 1.5)
p3
p3 <- p2+geom_text(aes(label=abb), nudge_x = 0.1)
p3
p4 <- p3 + labs(title = "US Gun Murders in 2010",
x = "Populations in millions (log scale)",
y = "Total number of murders (log scale)",
color = "Region")
p4
p5 <- p4 +
geom_abline(intercept = log10(r), lty = 2, color = "darkgrey")
r <- murders |>
summarize(rate = sum(total)/sum(population)*10^6) |>
pull(rate)
p5 <- p4 +
geom_abline(intercept = log10(r), lty = 2, color = "darkgrey")
p5
knitr::opts_chunk$set(echo = TRUE)
# Load the required packages
# install.packages(c("dslabs", "dplyr", "ggplot2", "lubridate"))
library(dslabs)
library(dplyr)
library(ggplot2)
library(lubridate)
data("murders")
head(murders, 2)
install.packages(c("dslabs", "dplyr", "ggplot2", "lubridate"))
install.packages(c("dslabs", "dplyr", "ggplot2", "lubridate"))
knitr::opts_chunk$set(echo = TRUE)
mat <- matrix(1:50, 10, 5)
mat[5:8, c(2, 5)]
comput_s_n <- function(n){
n*log(base = e, x = n+5)/(n^(1/2))
}
comput_s_n <- function(n){
n*log(base = e, x = n+5)/(n^(1/2))
}
sapply(10:20, comput_s_n)
compute_s_n <- function(n){
n*log(x = n+5)/(n^(1/2))
}
sapply(10:20, compute_s_n)
ChickWeight
co2
class(co2)
class(ChickWeight)
library(dslabs)
library(dplyr)
library(ggplot2)
data("murders")
class(murders)
struct(murders)
struc(murders)
str(murders)
muders |> mutate(rate = total/population*10^5) |> filter(rate>5) |> select(state, abb, total, rate)
murders |> mutate(rate = total/population*10^5) |> filter(rate>5) |> select(state, abb, total, rate)
data <- murders |> mutate(rate = total/population*10^5) |> filter(rate>5) |> select(state, abb, total, rate)
barplot(height=data$rate, names=data$state)
data <- murders |> mutate(rate = total/population*10^5) |> filter(rate>5) |> select(state, abb, total, rate)
barplot(height=data$rate, names=data$state)+labs(title="Top 5 murder rates of US states", x="murder rate/ 100,000 people)", y = "State names")
data <- murders |> mutate(rate = total/population*10^5) |> filter(rate>5) |> select(state, abb, total, rate)
barplot(height=data$rate, names=data$state)
barplot(height=data$rate, names=data$state)
murders |> mutate(rate = totl/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> arrange(rate) |> top_n(n=3)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> arrange(rate)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> arrange(rate) |>top_n(3)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> arrange(rate) |>top_3()
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> arrange(desc(rate)) |>top_n(3)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> arrange(rate) |>top_n(rate, 3)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> slice_min(rate, 3)
murders |> mutate(rate = total/population*10^5) |> filter(population<5000000 & rate < 3.0) |> select(abb, total, rate) |> slice_min(rate, n=3)
?median()
?group_by()
murders |> mutate(population_group = ifelse(population <= median(population), "Above median population", "")) |> group_by(population_group) |> summarize(average_murder_rate = sum(total)/sum(population*10^5))
murders |> mutate(population_group = ifelse(population <= median(population), "Above median population", "Below median population")) |> group_by(population_group) |> summarize(average_murder_rate = sum(total)/sum(population*10^5))
murders |> mutate(population_group = ifelse(population <= median(population), "Above median population", "Below median population")) |> group_by(population_group) |> summarize(average_murder_rate = sum(total)/sum(population)*10^5)
murder |> ggplot(aes(x=population, y=rate)) + geom_point(aes(color=region)) + geom_text(aes(label=abb), nudge_x=0.5)
murders |> ggplot(aes(x=population, y=rate)) + geom_point(aes(color=region)) + geom_text(aes(label=abb), nudge_x=0.5)
murders |> ggplot(aes(population, rate)) + geom_point(aes(color=region)) + geom_text(aes(label=abb), nudge_x=0.5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.5)
murders
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.5)
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=2
)
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=10)
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=10)
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=10, nudge_y=1)
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=10, nudge_y=1) + scale_x_log10() + scale_y_log10()
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=1, nudge_y=1) + scale_x_log10() + scale_y_log10()
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.1, nudge_y=0.1) + scale_x_log10() + scale_y_log10()
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.1) + scale_x_log10() + scale_y_log10()
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.05) + scale_x_log10() + scale_y_log10()
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.05) + scale_x_log10() + labs(x="Population in milions(log scale)", y="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.05) + labs(x="Population in milions(log scale)", y="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population/10^5, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.05) + labs(x="Population in milions(log scale)", y="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population/10^5, rate)) + geom_point(size=3) + geom_text(aes(label=abb), nudge_x=0.05) + scale_x_log10() + labs(x="Population in milions(log scale)", y="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population/10^5, rate)) + geom_point(size=3) + geom_text(aes(label=state), nudge_x=0.05) + scale_x_log10() + labs(x="Population in milions(log scale)", y="Murder rate", title="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population/10^5, rate)) + geom_point(size=3) + geom_text(aes(label=state), nudge_x=0.05) + scale_x_log10() + scale_y_log10() + labs(x="Population in milions(log scale)", y="Murder rate", title="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population/10^5, rate)) + geom_point(size=3) + geom_text(aes(label=state), nudge_y=0.1) + scale_x_log10() + scale_y_log10() + labs(x="Population in milions(log scale)", y="Murder rate", title="")
murders <- mutate(murders, rate = total/population*10^5)
murders |> ggplot(aes(population/10^5, rate)) + geom_point(size=3) + geom_text(aes(label=state), nudge_y=0.1) + scale_x_log10() + scale_y_log10() + labs(x="Population in milions(log scale)", y="Murder rate", title="US Gun Murder rate in 2010 for each state")
murders |> ggplot(aes(population/10^5, total/population*10^5)) + geom_point(size=3) + geom_text(aes(label=state), nudge_y=0.1) + scale_x_log10() + scale_y_log10() + labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people", title="US Gun Murder rate in 2010 for each state")
murders |> ggplot(aes(population/10^5, total/population*10^5)) + geom_point() + geom_text(aes(label=state), nudge_y=0.1) + scale_x_log10() + scale_y_log10() + labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people", title="US Gun Murder rate in 2010 for each state")
library(ggthemes)
r <- murders |>
summarize(rate = sum(total) /  sum(population) * 10^6) |>
pull(rate)
murders |>
ggplot(aes(population/10^6, total)) +
geom_abline(intercept = log10(r), lty = 2, color = "darkgrey") +
geom_point(aes(col = region), size = 3) +
geom_text_repel(aes(label = abb)) +
scale_x_log10() +
scale_y_log10() +
labs(title = "US Gun Murders in 2010",
x = "Populations in millions (log scale)",
y = "Total number of murders (log scale)",
color = "Region")
install(ggthemes)
install.packages(ggthemes)
llibrary(ggthemes)
library(ggthemes)
library(ggplot2)
library(tidyverse)
murders |> ggplot(aes(population/10^5, total/population*10^5)) + geom_point(position="jitter") + geom_text(aes(label=state), nudge_y=0.1) + scale_x_log10() + scale_y_log10() + labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people", title="US Gun Murder rate in 2010 for each state")
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") + geom_text(aes(label=state), nudge_y=0.1) + scale_x_log10() +
scale_y_log10() +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people", title="US Gun Murder rate in 2010 for each state")
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") + geom_text(aes(label=state), nudge_y=0.1) +
scale_x_log10() +
scale_y_log10() +
geom_label(position="nudge") +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people", title="US Gun Murder rate in 2010 for each state")
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") + geom_text(aes(label=state), position = "nudge") +
scale_x_log10() +
scale_y_log10() +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people", title="US Gun Murder rate in 2010 for each state")
install.packages("ggrepel")
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") +
geom_text_repel(aes(label=state)) +
scale_x_log10() +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people",
title="US Gun Murder rate in 2010 for each state")
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") +
geom_text_repel(aes(label = abb)) +
scale_x_log10() +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people",
title="US Gun Murder rate in 2010 for each state")
library(ggrepel)
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") +
geom_text_repel(aes(label = abb)) +
scale_x_log10() +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people",
title="US Gun Murder rate in 2010 for each state")
# 安装后必须加载包
library(ggrepel)
library(ggplot2)
# 然后运行你的代码
murders |>
ggplot(aes(population/10^5, total/population*10^5)) +
geom_point(position="jitter") +
geom_text_repel(aes(label=state)) +
scale_x_log10() +
labs(x="Population in milions(log scale)", y="Murder rate per 100,000 people",
title="US Gun Murder rate in 2010 for each state")
library(ggplot2)
data(gapminder)
library(ddslabs)
library(dslabs)
data(gapminder)
str(gapminder)
knitr::opts_chunk$set(echo = TRUE)
gapminder |>
filter(year %in% c(1960, 1970, 1980, 1990, 2000, 2010)) |>
mutate(year_factor = as.factor(year)) |>
ggplot(aes(life_expectancy)) +
geom_density(
adjust = 1,
alpha = 0.5,
aes(fill = year_factor),
color = NA) +
facet_grid(continent~., scales="free_y") +
labs(
title = "Life expectancy distribution for each continent across years",
x = "Life expectancy",
y = "Density (proportion of contries in the continent)",
fill = "Year"
) +
theme_minimal()
# Load the required packages
# install.packages(c("dslabs", "dplyr", "ggplot2", "lubridate"))
library(dslabs)
library(dplyr)
library(ggplot2)
library(lubridate)
library(dslabs)
library(dplyr)
library(ggplot2)
data("gapminder")
# Load the required packages
# install.packages(c("dslabs", "dplyr", "ggplot2", "lubridate"))
library(dslabs)
library(dplyr)
library(ggplot2)
library(lubridate)
gapminder |>
filter(year %in% c(1960, 1970, 1980, 1990, 2000, 2010)) |>
mutate(year_factor = as.factor(year)) |>
ggplot(aes(life_expectancy)) +
geom_density(
adjust = 1,
alpha = 0.5,
aes(fill = year_factor),
color = NA) +
facet_grid(continent~., scales="free_y") +
labs(
title = "Life expectancy distribution for each continent across years",
x = "Life expectancy",
y = "Density (proportion of contries in the continent)",
fill = "Year"
) +
theme_minimal()
library(dplyr)
library(ggplot2)
library(lubridate)  # for timestamps
data("storms")
storms |> filter(wind == max(wind))
# (1) Whole dataset
storms |>
summarise(max_wind = max(wind), min_pressure = min(pressure))
# (2) By year
storms |>
group_by(year) |>
summarise(max_wind = max(wind), min_pressure = min(pressure)) |>
arrange(desc(max_wind)) |>
top_n(10, max_wind)
storms |>
ggplot(aes(wind, pressure)) +
geom_jitter(alpha = 0.05, width = 2.5, height = 2) +
labs(
title = "Relationship between Wind Speed and Atmospheric Pressure in Storms",
x = "Pressure (millibars)",
y = "Wind Speed (knots)"
) +
theme_minimal()
data <- storms |>
filter(year == 2005 & month == 8) |>
mutate(timestamp = make_datetime(year, month, day, hour)) |>
arrange(name, timestamp)
data |>
ggplot(aes(timestamp, wind, color = name)) +
geom_line() +
labs(
title = "Wind speed of storms in August 2005",
x = "Date",
y = "Wind Speed (knots)",
color = "Storm name"
)
library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyverse)
covid <- read_csv("http://www.bio8.cs.hku.hk/comp2501/covid.csv")
nrow(covid)
names(covid)
covid |> arrange(desc(deaths)) |> top_n(5, deaths)
unique(covid$"countriesAndTerritories") |> length()
# (1) Whole dataset
covid |>
summarise(sum_of_cases = sum(cases), sum_of_deaths = sum(deaths))
# (1) Whole dataset
covid |>
summarise(sum_of_cases = sum(cases), sum_of_deaths = sum(deaths))
# (2) By countries and territories
covid |>
group_by(countriesAndTerritories) |>
summarise(sum_of_cases = sum(cases), sum_of_deaths = sum(deaths)) |>
arrange(desc(sum_of_deaths)) |>
head(3)
# (3) By continents
covid |>
group_by(continentExp) |>
summarise(sum_of_cases = sum(cases), sum_of_deaths = sum(deaths)) |>
arrange(desc(sum_of_deaths))
# only 6 rows, so `|> head(3)` is unnecessary
covid <- mutate(covid, date = dmy(dateRep))
head(covid)
# (1) with outliers
covid |>
ggplot(aes(cases, deaths)) +
geom_point(alpha = 0.3) +
labs(
title = "Relationship between COVID-19 cases and death (with outliers)",
x = "Number of Cases",
y = "Number of Deaths"
) +
theme_minimal()
# (2) without outliers
covid_clean <- filter(covid, cases >= 0 & deaths >= 0)
covid_clean |>
filter(cases >=0 & deaths >= 0) |>
ggplot(aes(cases, deaths)) +
geom_point(alpha = 0.3) +
labs(
title = "Relationship between COVID-19 cases and death (without outliers)",
x = "Number of Cases",
y = "Number of Deaths"
) +
theme_minimal()
covid_clean |>
filter(countriesAndTerritories=="China") |>
ggplot(aes(date, cases)) +
geom_line() +
labs(
title = "Daily COVID-19 Cases in China (2020)",
x = "Date",
y = "Number of cases"
) +
theme_minimal()
max_total_country <- covid_clean |>
group_by(countriesAndTerritories) |>
summarise(total_cases = sum(cases)) |>
arrange(desc(total_cases)) |>
head() |>
_$countriesAndTerritories
covid_clean |>
filter(countriesAndTerritories %in% max_total_country) |>
ggplot(aes(as.Date(date), cases, color = countriesAndTerritories, group = countriesAndTerritories)) +
geom_line() +
labs(
title = "Daily COVID-19 Cases in top six countries (2020)",
x = "Date",
y = "Number of cases",
color = "Country"
) +
theme_minimal() +
theme(
legend.position = "bottom",
legend.direction = "horizontal"
)
covid_clean |>
filter(countriesAndTerritories=="Germany" & is.na(cases)==FALSE & is.na(deaths)==FALSE) |>
mutate(period = if_else(date < "2020-06-10",
"Before_determination", "After_determination")) |>
group_by(period) |>
summarise(average_cases = mean(cases), average_deaths = mean(deaths)) |>
arrange(desc(period))
covid_clean |>
filter(countriesAndTerritories=="Germany" & is.na(cases)==FALSE & is.na(deaths)==FALSE) |>
ggplot(aes(x = as.Date(date))) +
geom_line(aes(y = cases, color = "Cases per day")) +
geom_line(aes(y = deaths, color = "Deaths per day")) +
labs(
title = "Daily COVID-19 Cases and Deaths in Germany (2020)",
x = "Date",
y = "Count",
) +
geom_vline(
xintercept = c(as.Date("2020-03-20"), as.Date("2020-04-20")),
linetype = "dashed",
color = "gray",
)
theme_minimal() +
theme(legend.position = "bottom", legend.direction = "horizontal")
